# Generated by Django 5.2.7 on 2025-10-04 07:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EntidadComercial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_comercial', models.CharField(help_text='Nombre legal o comercial de la entidad.', max_length=255, verbose_name='Nombre Comercial')),
                ('identificacion_fiscal', models.CharField(help_text='Número de identificación tributaria (NIT, RUT, Cédula). Debe ser único.', max_length=50, unique=True, verbose_name='Identificación Fiscal (NIT/RUT)')),
                ('tipo', models.CharField(choices=[('C', 'Cliente'), ('P', 'Proveedor'), ('A', 'Ambos')], default='C', help_text='Clasifica si la entidad es Cliente (C), Proveedor (P) o Ambos (A).', max_length=1, verbose_name='Tipo de Entidad')),
                ('correo_electronico', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Correo Electrónico')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono de Contacto')),
                ('direccion_principal', models.TextField(blank=True, null=True, verbose_name='Dirección Principal')),
                ('plazo_credito_dias', models.IntegerField(default=0, help_text='Número de días para el pago a crédito (0 = Contado).', verbose_name='Plazo de Crédito (días)')),
                ('activo', models.BooleanField(default=True, help_text='Indica si la entidad está activa para transacciones.', verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Entidad Comercial',
                'verbose_name_plural': 'Entidades Comerciales',
                'ordering': ['nombre_comercial'],
            },
        ),
        migrations.CreateModel(
            name='Moneda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_iso', models.CharField(help_text='Código ISO 4217 de la moneda (ej. USD, COP).', max_length=3, unique=True, verbose_name='Código ISO')),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombre de la Moneda')),
                ('simbolo', models.CharField(max_length=5, verbose_name='Símbolo')),
                ('es_principal', models.BooleanField(default=False, help_text='Marcar solo la moneda base para la contabilidad.', verbose_name='Moneda Principal')),
            ],
            options={
                'verbose_name': 'Moneda',
                'verbose_name_plural': 'Monedas',
                'ordering': ['codigo_iso'],
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre comercial bajo el cual se vende este ítem.', max_length=200, verbose_name='Nombre del Producto/Servicio')),
                ('codigo_sku', models.CharField(help_text='Identificador único para inventario y búsqueda rápida. Ej. SKU-001.', max_length=50, unique=True, verbose_name='Código SKU')),
                ('tipo', models.CharField(choices=[('P', 'Producto Físico'), ('S', 'Servicio')], default='P', help_text="Define si es un 'P' Producto Físico o un 'S' Servicio.", max_length=1, verbose_name='Tipo')),
                ('descripcion', models.TextField(blank=True, help_text='Descripción detallada para uso interno y documentos como cotizaciones.', null=True, verbose_name='Descripción')),
                ('precio_venta', models.DecimalField(decimal_places=2, help_text='Precio estándar sin incluir impuestos.', max_digits=10, verbose_name='Precio de Venta')),
                ('costo_unitario', models.DecimalField(blank=True, decimal_places=2, help_text='Costo de adquisición o fabricación. Opcional.', max_digits=10, null=True, verbose_name='Costo Unitario')),
                ('aplica_impuesto', models.BooleanField(default=True, help_text='Marcar si este producto está sujeto a IVA u otro impuesto de venta.', verbose_name='Aplica Impuesto')),
                ('unidad_medida', models.CharField(help_text='Ej. Unidad, Caja, Litros. Necesario para control de inventario.', max_length=10, verbose_name='Unidad de Medida')),
                ('activo', models.BooleanField(default=True, help_text='Indica si el producto está disponible para la venta.', verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Producto o Servicio',
                'verbose_name_plural': 'Productos y Servicios',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='CuentaContable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código jerárquico de la cuenta contable (ej. 110505).', max_length=20, unique=True, verbose_name='Código Contable')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la Cuenta')),
                ('tipo', models.CharField(choices=[('A', 'Activo'), ('P', 'Pasivo'), ('R', 'Patrimonio'), ('I', 'Ingreso'), ('G', 'Gasto')], help_text='Activo, Pasivo, Patrimonio, Ingreso o Gasto.', max_length=1, verbose_name='Tipo de Cuenta')),
                ('naturaleza', models.CharField(choices=[('D', 'Débito'), ('C', 'Crédito')], help_text='Define si la cuenta aumenta con un movimiento Débito o Crédito.', max_length=1, verbose_name='Naturaleza')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('cuenta_padre', models.ForeignKey(blank=True, help_text='Enlace a la cuenta inmediatamente superior en la jerarquía contable.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cuentas_hijas', to='central.cuentacontable', verbose_name='Cuenta Padre')),
            ],
            options={
                'verbose_name': 'Cuenta Contable',
                'verbose_name_plural': 'Cuentas Contables',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='TransaccionEncabezado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(help_text='Día en que ocurre la transacción contable.', verbose_name='Fecha de Transacción')),
                ('referencia', models.CharField(help_text='Número único de documento (ej. Factura, Recibo de Caja).', max_length=50, unique=True, verbose_name='Referencia/Documento')),
                ('descripcion', models.TextField(help_text='Detalle del propósito de esta transacción.', verbose_name='Descripción')),
                ('tasa_cambio', models.DecimalField(decimal_places=4, default=1.0, help_text='Tasa utilizada para convertir a la Moneda Principal si es diferente.', max_digits=12, verbose_name='Tasa de Cambio')),
                ('entidad', models.ForeignKey(blank=True, help_text='Cliente o Proveedor asociado, si aplica.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='central.entidadcomercial', verbose_name='Entidad Comercial')),
                ('moneda', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='central.moneda', verbose_name='Moneda')),
            ],
            options={
                'verbose_name': 'Asiento Contable',
                'verbose_name_plural': 'Asientos Contables',
                'ordering': ['-fecha', 'referencia'],
            },
        ),
        migrations.CreateModel(
            name='MovimientoContable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_movimiento', models.CharField(choices=[('D', 'Débito'), ('C', 'Crédito')], help_text='Indica si el movimiento es un Débito o un Crédito.', max_length=1, verbose_name='Tipo de Movimiento')),
                ('monto', models.DecimalField(decimal_places=2, help_text='Valor del movimiento en la moneda de la transacción.', max_digits=14, verbose_name='Monto')),
                ('cuenta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='central.cuentacontable', verbose_name='Cuenta Contable')),
                ('encabezado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimientos', to='central.transaccionencabezado', verbose_name='Encabezado de Transacción')),
            ],
            options={
                'verbose_name': 'Movimiento Contable',
                'verbose_name_plural': 'Movimientos Contables',
                'ordering': ['encabezado', 'tipo_movimiento'],
            },
        ),
    ]
